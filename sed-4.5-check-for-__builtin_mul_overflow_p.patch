diff -Naur sed-4.6/configure.ac sed-4.6.tpg/configure.ac
--- sed-4.6/configure.ac	2018-12-10 03:26:36.000000000 +0000
+++ sed-4.6.tpg/configure.ac	2018-12-20 21:21:59.260995840 +0000
@@ -32,6 +32,18 @@
 gl_INIT
 gl_DISABLE_THREADS
 
+AC_CACHE_CHECK([for gcc 7-compatible __builtin_mul_overflow_p],
+  [utils_cv_builtin_mul_overflow_p],
+  [AC_COMPILE_IFELSE(
+    [AC_LANG_PROGRAM(
+      [[]],
+      [[return __builtin_mul_overflow_p(1, 2, 3);]])],
+    [utils_cv_builtin_mul_overflow_p=yes],
+    [utils_cv_builtin_mul_overflow_p=no])])
+if test $utils_cv_builtin_mul_overflow_p = yes; then
+  AC_DEFINE([HAVE_BUILTIN_MUL_OVERFLOW_P], [1], [Define if your compiler supports __builtin_mul_overflow_p])
+fi
+
 # The test suite needs to know if we have a working perl.
 # FIXME: this is suboptimal.  Ideally, we would be able to call gl_PERL
 # with an ACTION-IF-NOT-FOUND argument ...
diff -Naur sed-4.6/gnulib-tests/macros.h sed-4.6.tpg/gnulib-tests/macros.h
--- sed-4.6/gnulib-tests/macros.h	2018-01-04 00:36:29.000000000 +0000
+++ sed-4.6.tpg/gnulib-tests/macros.h	2018-12-20 21:22:28.170995441 +0000
@@ -22,7 +22,7 @@
 #include <stdlib.h>
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur sed-4.6/lib/dfa.c sed-4.6.tpg/lib/dfa.c
--- sed-4.6/lib/dfa.c	2018-12-16 02:33:35.000000000 +0000
+++ sed-4.6.tpg/lib/dfa.c	2018-12-20 21:22:48.888995154 +0000
@@ -55,7 +55,7 @@
 #include "localeinfo.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur sed-4.6/lib/intprops.h sed-4.6.tpg/lib/intprops.h
--- sed-4.6/lib/intprops.h	2018-12-10 03:27:24.000000000 +0000
+++ sed-4.6.tpg/lib/intprops.h	2018-12-20 21:23:56.916994214 +0000
@@ -227,14 +227,11 @@
 # define _GL_HAS_BUILTIN_OVERFLOW 0
 #endif
 
-/* True if __builtin_add_overflow_p (A, B, C) works.  */
-#define _GL_HAS_BUILTIN_OVERFLOW_P (7 <= __GNUC__)
-
 /* The _GL*_OVERFLOW macros have the same restrictions as the
    *_RANGE_OVERFLOW macros, except that they do not assume that operands
    (e.g., A and B) have the same type as MIN and MAX.  Instead, they assume
    that the result (e.g., A + B) has that type.  */
-#if _GL_HAS_BUILTIN_OVERFLOW_P
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define _GL_ADD_OVERFLOW(a, b, min, max)                               \
    __builtin_add_overflow_p (a, b, (__typeof__ ((a) + (b))) 0)
 # define _GL_SUBTRACT_OVERFLOW(a, b, min, max)                          \
diff -Naur sed-4.6/lib/mbrtowc.c sed-4.6.tpg/lib/mbrtowc.c
--- sed-4.6/lib/mbrtowc.c	2018-12-13 06:11:38.000000000 +0000
+++ sed-4.6.tpg/lib/mbrtowc.c	2018-12-20 21:24:25.792993814 +0000
@@ -36,7 +36,7 @@
 # include "verify.h"
 
 # ifndef FALLTHROUGH
-#  if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #   define FALLTHROUGH ((void) 0)
 #  else
 #   define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur sed-4.6/lib/quotearg.c sed-4.6.tpg/lib/quotearg.c
--- sed-4.6/lib/quotearg.c	2018-02-04 10:30:06.000000000 +0000
+++ sed-4.6.tpg/lib/quotearg.c	2018-12-20 21:24:50.563993472 +0000
@@ -55,7 +55,7 @@
 #define INT_BITS (sizeof (int) * CHAR_BIT)
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur sed-4.6/lib/regex_internal.h sed-4.6.tpg/lib/regex_internal.h
--- sed-4.6/lib/regex_internal.h	2018-12-10 03:27:25.000000000 +0000
+++ sed-4.6.tpg/lib/regex_internal.h	2018-12-20 21:26:17.374992271 +0000
@@ -886,7 +886,7 @@
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur sed-4.6/lib/xalloc-oversized.h sed-4.6.tpg/lib/xalloc-oversized.h
--- sed-4.6/lib/xalloc-oversized.h	2018-01-04 00:36:29.000000000 +0000
+++ sed-4.6.tpg/lib/xalloc-oversized.h	2018-12-20 21:27:22.972991364 +0000
@@ -41,7 +41,7 @@
    positive and N must be nonnegative.  This is a macro, not a
    function, so that it works correctly even when SIZE_MAX < N.  */
 
-#if 7 <= __GNUC__
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define xalloc_oversized(n, s) \
    __builtin_mul_overflow_p (n, s, (__xalloc_count_type) 1)
 #elif 5 <= __GNUC__ && !defined __ICC && !__STRICT_ANSI__
diff -Naur sed-4.6/sed/sed.h sed-4.6.tpg/sed/sed.h
--- sed-4.6/sed/sed.h	2018-10-27 22:42:43.000000000 +0000
+++ sed-4.6.tpg/sed/sed.h	2018-12-20 21:26:48.584991840 +0000
@@ -285,7 +285,7 @@
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
